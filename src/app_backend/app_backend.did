type Contact = record { media : text; email : text; phone : text };
type EventDTO = record {
  media : text;
  name : text;
  tags : vec text;
  description : text;
  email : text;
  address : text;
  phone : text;
  price : float32;
  location : record { float64; float64 };
  time_start : text;
  time_end : text;
};
type EventDetailsResponse = record {
  id : nat;
  contact : Contact;
  name : text;
  tags : vec text;
  description : text;
  address : text;
  price : float32;
  location : record { float64; float64 };
  time_start : text;
  time_end : text;
};
type EventMapResponse = record {
  id : nat;
  location : record { float64; float64 };
};
type UserDTO = record {
  bio : text;
  job : text;
  name : text;
  role : text;
  tags : vec text;
  location : record { float64; float64 };
};
type UserDataModel = record {
  bio : text;
  job : text;
  name : text;
  role : text;
  list_of_events : vec nat;
  tags : vec text;
  list_of_hosted_events : vec nat;
  location : record { float64; float64 };
};
service : {
  create_event : (EventDTO) -> (bool);
  get_all_events : () -> (opt vec EventMapResponse) query;
  get_event : (nat) -> (opt EventDetailsResponse) query;
  get_event_by_tags_user : () -> (opt vec EventMapResponse) query;
  get_user : () -> (opt UserDataModel) query;
  get_user_events : () -> (opt vec EventDetailsResponse) query;
  get_user_hosted_events : () -> (opt vec EventDetailsResponse) query;
  join_event : (nat) -> (bool);
  register_user : (UserDTO) -> (bool);
}
